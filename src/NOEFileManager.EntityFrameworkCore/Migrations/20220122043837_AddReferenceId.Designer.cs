// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NOEFileManager.EntityFrameworkCore;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace NOEFileManager.Migrations
{
    [DbContext(typeof(NOEFileManagerDbContext))]
    [Migration("20220122043837_AddReferenceId")]
    partial class AddReferenceId
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("NOEFileManager.Core.Domain.Entities.FileInfo.FileStorage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("FileAllowAnanymousAccess")
                        .HasColumnType("boolean");

                    b.Property<string>("FileContentType")
                        .HasColumnType("text");

                    b.Property<DateTime>("FileCreatedUtc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FileDescription")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("FileExtension")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<byte[]>("FileHash")
                        .HasColumnType("bytea");

                    b.Property<bool>("FileHidden")
                        .HasColumnType("boolean");

                    b.Property<string>("FileName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("FilePath")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<int>("FileType")
                        .HasColumnType("integer");

                    b.Property<Guid>("ReferenceId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("FileStorages");
                });
#pragma warning restore 612, 618
        }
    }
}
